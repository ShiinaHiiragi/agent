{
  "name": "agent",
  "author": "Ichinoe",
  "description": "AI agent based on LLM.",
  "version": "0.1.0",
  "main": "public/electron.js",
  "homepage": "./",
  "private": true,
  "dependencies": {
    "@emotion/react": "^11.11.1",
    "@emotion/styled": "^11.11.0",
    "@fontsource/inter": "^5.0.8",
    "@mui/icons-material": "^5.14.7",
    "@mui/joy": "^5.0.0-beta.4",
    "@mui/material": "^5.14.7",
    "@testing-library/jest-dom": "^5.17.0",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "axios": "^1.5.0",
    "electron-is-dev": "^2.0.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-markdown": "^8.0.7",
    "react-scripts": "5.0.1",
    "react-syntax-highlighter": "^15.5.0",
    "rehype-katex": "^6.0.3",
    "rehype-raw": "^7.0.0",
    "remark-gfm": "^3.0.1",
    "remark-math": "^5.1.1",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "concurrently 'npm run dev:react' 'wait-on http://localhost:3000 && npm run dev:app'",
    "pack": "rm -rf ./build ./dist && npm run build:react && npm run build:app",
    "dev:react": "GENERATE_SOURCEMAP=false react-scripts start",
    "dev:app": "electron .",
    "build:react": "react-scripts build",
    "build:app": "electron-builder -c.extraMetadata.main=build/electron.js"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@babel/plugin-proposal-private-property-in-object": "^7.21.11",
    "concurrently": "^8.2.1",
    "electron": "^26.1.0",
    "electron-builder": "^24.6.4",
    "electron-packager": "^17.1.2",
    "wait-on": "^7.0.1"
  },
  "build": {
    "appId": "com.electron.agent",
    "productName": "Agent",
    "files": [
      "build/**/*",
      "node_modules/**/*"
    ],
    "directories": {
      "buildResources": "assets"
    },
    "win": {
      "target": "nsis"
    },
    "linux": {
      "target": "AppImage",
      "category": "Utility"
    },
    "mac": {
      "target": "dmg"
    }
  }
}
